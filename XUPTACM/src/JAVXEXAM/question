
2.

题目描述
     给定一元二次方程ax^2+bx+c=0的系数a、b和c，求解一元二次方程的根，要求能够分辨两个实根、单根和没有实根的三种情况。注意: 判断浮点数为零与否用|x|<10e-6来判断。要求可以重复输入输出。
输入
输入一元二次方程的系数，以空格分隔系数。系数a不为0，可以不做a的判断。
输出
根据求解情况来输出一元二次方程的根，详见样例输出。
样例输入
1 2 1
1 2 -1
1 2 2
样例输出
The root is:-1.00.
The roots are 0.41 and -2.41.
The equation has no real roots.
提示


输出时小数点后保留两位小数，比如根为3时，输出3.00。 没有实数根认为该方程无解。输出The equation has no real roots. 注意输出的格式，输出的语句有“.” 符号。

求解|x| ，使用数学库函数，Math.abs(x);

3.

题目描述
编程实现一个简单的计算器，实现两个数的加、减、乘、除。
注意：输入的数字为整数，可能大于Long.MAX_VALUE (即： 9223372036854775807）
例如输入：
199818221687230837883277970155607217447/15607605175531087007（除法运算）
输出：
12802618943776012921  （输出商）

输入
268757455632088758902114193354244344883-187825044215992922193584201757800947591



输出
80932411416095836708529991596443397292   （输出两数之差）
样例输入
12802618943776012921*15607605175531087007

样例输出
199818221687230837883277970155607217447
提示
提示：

1. 当字符串对象str存储的值为"199818221687230837883277970155607217447/15607605175531087007"时，下面的方法可以将str从除号"/"处分割成两个字符串：

String[] ob = str.split("\\D", 0);

这时，ob[0]的值为"199818221687230837883277970155607217447";

ob[1]的值为"15607605175531087007".



2. 如果要检测字符串中是否包含除号'/'，可以用下面的方法检测：

(in1.indexOf('/') != -1)为true，表示包含'/'。

4.

题目描述
给定一个字符串，对该字符串单个字符进行排序，请输出排好序的字符串。要求能够连续输入输出的字符串。
输入
给定字符串，能够连续输入。
输出
输出排好序的字符串
样例输入
abc
cab
hello
xupt
样例输出
abc
abc
ehllo
ptux
提示